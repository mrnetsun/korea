<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
class News extends MY_Controller {
	/**
	 * Model
	 * @var string
	 */
	public $model_name  = 'news_model';
	/**
	 * 
	 * @var News_Model
	 */
	public $model;
	
	

	/**
	 * News controller 
	 */
	
	//form add
	protected $before_add = array();
	
	//form edit
	protected $before_edit = array();
	protected $after_edit = array();
	
	//action insert
	protected $before_insert = array();
	protected $after_insert = array();
	
	//action update
	protected $before_update = array();
	protected $after_update = array();
	
	//form view
	protected $before_view = array();	
	protected $after_view = array();
	
    public function __construct(){
        parent::__construct();
		$this->load->helper('dom');
    }

	public function index()
	{
		parent::index(); // TODO: Change the autogenerated stub
	}

	public function getList($start = '')
	{
		parent::getList($start); // TODO: Change the autogenerated stub
	}

	/**
	 * Build a Condition where for search 
	 * @return mixed:
	*/
    protected function _buildCondition(){
    	$aryCondition = array();
    	
    	if(!empty($this->postData)){
    		 //search
			 			
			if($this->postData['title']!=''){
    		 	$aryCondition['like'][] =  array("mt.title"=>$this->postData['title']);
    		 }			

			if($this->postData['code']!=''){
    		 	$aryCondition['and'][] =  array("mt.code"=>$this->postData['code']);
    		 }
			if($this->postData['approve']!=''){
    		 	$aryCondition['and'][] =  array("mt.approve"=>$this->postData['approve']);
    		 }

			if($this->postData['status']!=''){
    		 	$aryCondition['and'][] =  array("mt.status"=>$this->postData['status']);
    		 }

    	}
    	return $aryCondition;
    }
    
    
	/**
	 * Get data for List screen
	 * @param array $aryCondition
	 * @param int $start
	 * @return mixed
	*/ 
    protected function _getDataList($aryCondition=array(),$start='',$sort= array()){
    	return  parent::_getDataList($aryCondition,$start,$sort,array('select'=>'mt.*,c.name as cate_name',
			'join'=>array(
				array('category as c','c.cateId  = mt.cateId','left')
			)
		,'created'=>true));
    	
    }

	public function getAll(){
		$links = $this->model->find_where('list',array('status'=>ACTIVE),array('from'=>'crawler_article_topic'));
		$this->template->set('links',$links);
		$this->view('newss/updateAll');
	}

	public function prepare(){
		$aryData = array('ok'=>true);
		$this->model->update('crawler_article_topic',array('run_flag'=>0),array('status'=>ACTIVE));
		echo json_encode($aryData);
	}

	public function updateNews(){
		$aryData = array('ok'=>1);
		$item = $this->model->find_where('',array('run_flag'=>0),array('from'=>'crawler_article_topic '));
		$this->model->update('crawler_article_topic',array('run_flag'=>2),array('id'=>$item->id));
		if(!empty($item)){
			$aryData['url'] = site_url('cronjob/'.$item->code.'/getArticleLink/'.$item->id);
		}else{
			$aryData['ok'] = 2;
			$aryData['url'] = '';
			$aryData['smessage'] = __("MSG_UPDATE_SUCCESSFUL");
		}

		echo json_encode($aryData);
	}

	public function crawlerArticle(){
		$aryData = array('ok'=>true);
		$item = $this->model->find_where('',array('status'=>0),array('from'=>'crawler_article_link'));



		if(!empty($item)){
			//processing
//			$this->model->update('crawler_article_link',array('status'=>2),array('id'=>$item->id));

			$link = (strpos($item->link,'http://')===false && strpos($item->link,'https://')===false)? $item->domain.$item->link :  $item->link;
//			debug($item,false);debug($link);
			$html_string = curl_get_content($link);
			if($html_string) {

				switch($item->code){
					case 'vneconomy':
						$aryData = $this->vneconomy($html_string,$item);
						break;
				}

			}else{
				$aryData['ok'] = false;
				$aryData['smessage'] = 'Lỗi, không nhận được bản ghi<br>';
				//error
				$this->model->update('crawler_article_link',array('status'=>-1),array('id'=>$item->id));
			}

		}else{
			$aryData['ok'] = false;
			$aryData['smessage'] = 'Hoàn thành<br>';
		}

		echo json_encode($aryData);
	}


	public function crawlerAllArticle(){
		$aryData = array('ok'=>true);
		$articles = $this->model->find_where('list',array('status'=>0),array('from'=>'crawler_article_link'));


		if(!empty($articles))foreach($articles as $item){
			if(!empty($item)){
				//processing
//			$this->model->update('crawler_article_link',array('status'=>2),array('id'=>$item->id));

				$link = (strpos($item->link,'http://')===false && strpos($item->link,'https://')===false)? $item->domain.$item->link :  $item->link;
//			debug($item,false);debug($link);
				$html_string = curl_get_content($link);
				if($html_string) {

					switch($item->code){
						case 'vneconomy':
							$aryData = $this->vneconomy($html_string,$item);
							break;
					}

				}else{
					$aryData['ok'] = false;
					$aryData['smessage'] = 'Lỗi, không nhận được bản ghi<br>';
					//error
					$this->model->update('crawler_article_link',array('status'=>-1),array('id'=>$item->id));
				}

			}else{
				$aryData['ok'] = false;
				$aryData['smessage'] = 'Hoàn thành<br>';
			}
		}


		echo json_encode($aryData);
	}

	private function vneconomy($html_string,$item){
		$aryData = array('ok'=>true);
		$data = array();

		$html = str_get_html($html_string);
//		debug($html);
		if(!$html) return false;

		$title = $html->find('h1[class="h1titleheaderbvt"]');
		$data['title'] = getStandardText($title[0]->innertext);

		$data['slug'] = to_slug($data['title']);
		$data['category_id'] = $item->category_id;

		$short_description = $html->find('h2[class="h2titleheaderbvt"]');
		$data['short_description'] = getStandardText($short_description[0]->innertext);

		$data['meta_descrition'] = $data['short_description'];

		$full_content = $html->find('div[class="detailsbaiviet"]',0);
		$data['full_content'] = $full_content->innertext;
		if($full_content){
			$aryImages =  $full_content->find('img');
			$contentImg = array();
			foreach($aryImages as $img){
				$contentImg[] = $img->attr['src'];
			}
		}

		$data['feature'] = $item->feature;

		$author = $html->find('span[class="tacgiabaiviet"]',0);
		$data['author'] = getStandardText(strip_tags($author->innertext));
		$data['author_search'] = to_slug($data['author']);

		if($data['author']){
			$exitedAuthor = $this->model->find_where('',array('author_name'=>$data['author']),array('from'=>'article_author'));
			if(!$exitedAuthor){
				$this->model->add('article_author',array('author_name'=>$data['author'],'author_slug'=>$data['author_search'],'status'=>ACTIVE));
			}
		}

		$data['author_site'] = $item->code;

		$tagDiv = $html->find('div[class="tagbaiviet"]',0);
		if($tagDiv){
			$tag = $tagDiv->find('a');
			$aryTag = array();$aryTagSearch= array();
			foreach($tag as $t){
				$tmp = getStandardText($t->innertext);
				$aryTag[] = $tmp;
				$aryTagSearch[] = to_slug($tmp);
			}
			$data['tags'] = implode(',',$aryTag);
			$data['tags_search'] = implode(',',$aryTagSearch);

			$data['meta_keyword'] = $data['tags'];
		}


		$data['hit'] = 0;

		$data['status'] = $item->approve;

		$data['updatedTime'] = date("Y-m-d H:i:s");

		//process image
		$imgPath = UPLOAD_DIR.'news/'.date("Ym").'/';
		if (!file_exists($imgPath)) {
			mkdir($imgPath, 0777, true);
		}

		$other_source = array();
		//thumbnail
		$thumb = $html->find('span[class="spimgbaiviet"]');
		if($thumb[0]){
			$thumb_img = $thumb[0]->find('img');
			$src = $thumb_img[0]->attr['src'];

			$src = (strpos($src,'http://')===false && strpos($src,'https://')===false)? $item->domain.$src:$src;

			$other_source[] = $src;

			$img_content = curl_get_content(str_replace(' ','%20',$src));
			$ext = pathinfo($src, PATHINFO_EXTENSION);
			$name = pathinfo($src,PATHINFO_BASENAME);

			$new_file = $imgPath.uniqid('thumb_').'.'.$ext;


			$f = fopen($new_file,"w+");
			fwrite($f,$img_content);
			fclose($f);

			watermark($new_file);

			$data['thumbnail'] = json_encode(array('real_name'=>$new_file,'client_name'=>$name));

		}

		$thumb_cap = $html->find('p[class="spimgbaivietnote"]',0);
		$data['thumbnail_caption'] = strip_tags($thumb_cap->innertext);

		//orther images;
		if(!empty($contentImg)){
			$arySearch =  array(); $aryReplace = array();
			foreach($contentImg as $img){
				$arySearch[] = $img;
				$link = (strpos($img,'http://')===false && strpos($img,'https://')===false)? $item->domain.$img:$img;
				$other_source[] = $link;

				$img_content = curl_get_content(str_replace(' ','%20',$link));
				$ext = pathinfo($src, PATHINFO_EXTENSION);
//				$name = pathinfo($src,PATHINFO_BASENAME);

				$new_file = $imgPath.uniqid('full_').'.'.$ext;
				$aryReplace[] = $new_file;

				$f = fopen($new_file,"w+");
				fwrite($f,$img_content);
				fclose($f);

				watermark($new_file);

			}

			$data['full_content'] = str_replace($arySearch,$aryReplace,$data['full_content']);
		}

		$data['other_source'] = json_encode($other_source);

		$this->model->add('article',$data);

		$aryData['smessage'] = '<li>'.$data['title'].'</li>';
		//success
		$this->model->update('crawler_article_link',array('status'=>1),array('id'=>$item->id));

		return $aryData;
	}


 
}

//end of News